import { useAuth } from '@/contexts/AuthContext';
import { useVB } from '@/contexts/VBContext';

export const useUserName = () => {
  const { user, profile, loading } = useAuth();
  const { state } = useVB();
  
  // Debug completo para identificar o problema
  console.log('üîç useUserName - Debug completo:');
  console.log('üîç loading:', loading);
  console.log('üîç user:', user);
  console.log('üîç profile:', profile);
  console.log('üîç state.currentUser:', state.currentUser);
  console.log('üîç user?.user_metadata:', user?.user_metadata);
  console.log('üîç user?.email:', user?.email);
  
  // Debug adicional para verificar se o nome est√° sendo salvo
  if (user) {
    console.log('üîç user.id:', user.id);
    console.log('üîç user.email:', user.email);
    console.log('üîç user.user_metadata:', user.user_metadata);
    console.log('üîç user.user_metadata.full_name:', user.user_metadata?.full_name);
  }
  
  if (profile) {
    console.log('üîç profile.id:', profile.id);
    console.log('üîç profile.full_name:', profile.full_name);
    console.log('üîç profile.email:', profile.email);
  }
  
  // Se ainda est√° carregando, retornar loading
  if (loading) {
    console.log('‚è≥ Ainda carregando, aguardando...');
    return {
      userName: 'Carregando...',
      user,
      profile,
      currentUser: state.currentUser,
      loading: true
    };
  }
  
  // Se n√£o h√° usu√°rio ap√≥s o carregamento, pode ser um problema de autentica√ß√£o
  if (!user && !loading) {
    console.log('‚ùå Nenhum usu√°rio autenticado ap√≥s carregamento');
    return {
      userName: 'Usu√°rio',
      user: null,
      profile: null,
      currentUser: state.currentUser,
      loading: false
    };
  }
  
  // Fun√ß√£o para obter o nome do usu√°rio com prioridade
  const getUserName = () => {
    if (!user) {
      console.log('‚ùå Nenhum usu√°rio autenticado');
      return 'Usu√°rio';
    }
    
    // SOLU√á√ÉO DIRETA: Sempre extrair primeiro nome do email
    if (user.email) {
      const emailName = user.email.split('@')[0];
      // Extrair apenas o primeiro nome (antes do primeiro ponto ou n√∫mero)
      const firstName = emailName.split(/[0-9.]/)[0];
      const capitalizedName = firstName.charAt(0).toUpperCase() + firstName.slice(1);
      console.log('‚úÖ Nome extra√≠do do email:', capitalizedName);
      return capitalizedName;
    }
    
    // Fallback para outros casos
    if (profile?.full_name) {
      console.log('‚úÖ Nome obtido do perfil Supabase:', profile.full_name);
      return profile.full_name;
    }
    
    if (user.user_metadata?.full_name) {
      console.log('‚úÖ Nome obtido dos metadados:', user.user_metadata.full_name);
      return user.user_metadata.full_name;
    }
    
    if (state.currentUser?.name && state.currentUser.name !== 'Usu√°rio') {
      console.log('‚úÖ Nome obtido do contexto VB:', state.currentUser.name);
      return state.currentUser.name;
    }
    
    // Fallback final
    console.log('‚ö†Ô∏è Usando nome padr√£o: Usu√°rio');
    return 'Usu√°rio';
  };
  
  const userName = getUserName();
  console.log('üîç useUserName - Nome final retornado:', userName);
  
  // SOLU√á√ÉO AGGRESSIVA: Se o nome ainda √© "Usu√°rio", for√ßar busca em todos os lugares
  if (userName === 'Usu√°rio') {
    console.log('üö® Nome ainda √© "Usu√°rio" - ATIVA√á√ÉO DE EMERG√äNCIA!');
    
    // Buscar em TODOS os lugares poss√≠veis
    let emergencyName = null;
    
    // 1. Perfil Supabase
    if (profile?.full_name) {
      emergencyName = profile.full_name;
      console.log('üö® Nome encontrado no perfil:', emergencyName);
    }
    // 2. Metadados do usu√°rio
    else if (user?.user_metadata?.full_name) {
      emergencyName = user.user_metadata.full_name;
      console.log('üö® Nome encontrado nos metadados:', emergencyName);
    }
    // 3. Contexto VB
    else if (state.currentUser?.name && state.currentUser.name !== 'Usu√°rio') {
      emergencyName = state.currentUser.name;
      console.log('üö® Nome encontrado no contexto VB:', emergencyName);
    }
    // 4. Email (√∫ltimo recurso)
    else if (user?.email) {
      const emailName = user.email.split('@')[0];
      emergencyName = emailName.charAt(0).toUpperCase() + emailName.slice(1);
      console.log('üö® Nome extra√≠do do email:', emergencyName);
    }
    
    if (emergencyName) {
      console.log('‚úÖ NOME DE EMERG√äNCIA ATIVADO:', emergencyName);
      
      // For√ßar atualiza√ß√£o do contexto VB
      if (state.currentUser?.name !== emergencyName) {
        console.log('üîÑ For√ßando atualiza√ß√£o do contexto VB...');
        // Disparar evento para atualizar outros componentes
        window.dispatchEvent(new CustomEvent('forceNameUpdate', {
          detail: { name: emergencyName }
        }));
      }
      
      return {
        userName: emergencyName,
        user,
        profile,
        currentUser: state.currentUser,
        loading: false
      };
    }
  }
  
  return {
    userName,
    user,
    profile,
    currentUser: state.currentUser,
    loading: false
  };
};
